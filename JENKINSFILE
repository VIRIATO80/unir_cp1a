pipeline {
     agent { label 'windows' }
     stages {
        stage('Get Code') {
            steps {
                // Obtener cÃ³digo del repo
                git 'https://github.com/VIRIATO80/unir_cp1a.git'
            }
        }
        
        stage('Static') {
            steps {
                bat '''
                    flake8 --exit-zero --format=pylint app > flake8.out
                '''
                recordIssues tools: 
                    [flake8(name: 'Flake8', pattern: 'flake8.out')],
                    qualityGates: [
                        [threshold: 10, type: 'TOTAL', unstable: true], 
                        [threshold: 12, type: 'TOTAL', unstable: false]
                    ]
            }
        }
        
        stage('Unit') {
            steps {
                catchError(buildResult: 'UNSTABLE', stageResult: 'FAILURE') {
                    bat '''
                        set PYTHONPATH=%WORKSPACE%
                        pytest --junitxml=result-unit.xml test\\unit
                    '''
                    junit 'result*.xml'
               }
            }
        }
        
        stage('Cobertura') {
            steps {
                bat '''
                    coverage run --branch --source=app --omit=app\\__init__.py,app\\api.py -m pytest test\\unit
                    coverage xml
                '''
                cobertura coberturaReportFile: 'coverage.xml', conditionalCoverageTargets: '100,83,80', lineCoverageTargets: '95,90,95', failUnstable: false
            }
        }
        
        stage('Security') {
            steps {
                bat '''
                    bandit --exit-zero -r . -f custom -o bandit.out --severity-level medium --msg-template "{abspath}:{line}: [{test_id} {msg}]"
                '''
                recordIssues tools:
                    [
                    pyLint(name: 'Bandit', pattern: 'bandit.out')],
                    qualityGates: [
                        [threshold: 1, type: 'TOTAL', unstable: true], 
                        [threshold: 2, type: 'TOTAL', unstable: false]
                    ]
            }
        }

        stage('Performance') {
            steps {
                bat '''
                    set FLASK_APP=app\\api.py
                    set FLASK_ENV=development
                    start flask run                
                    C:\\apache-jmeter-5.5\\bin\\jmeter -n -t test\\jmeter\\flask.jmx -f -l flask.jlt
                '''
                perfReport sourceDataFiles: 'flask.jlt'
            }
        }
        
    }
}